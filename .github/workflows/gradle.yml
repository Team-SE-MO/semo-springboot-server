name: CI / CD

on:
  push:
    branches: [ "main" ]
  pull_request: # PR이 생성되거나 업데이트될 때 실행
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

      - name: Build with Gradle
        run: |
          echo ${{secrets.APPLICATION_SECRET}} | base64 --decode > ./src/main/resources/application-secret.yml
          chmod +x ./gradlew
          ./gradlew clean build

      # Docker 빌드 및 푸시는 PR 이벤트에서는 실행하지 않음
      - name: Login to DockerHub
        if: github.event_name == 'push'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker
        if: github.event_name == 'push'
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/semo_app .

      - name: Push Docker
        if: github.event_name == 'push'
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/semo_app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # PR 이벤트에서는 배포하지 않음
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.VM_USERNAME }}   # SSH 사용자명
          host: ${{ secrets.VM_IP }}             # VM의 IP 주소
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }} # SSH 개인키
          script: |
            echo "Pulling latest Docker image..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/semo_app:latest
            
            echo "Stopping and removing existing container..."
            sudo docker stop semo_app || true
            sudo docker rm semo_app || true
            
            echo "Starting new container..."
            sudo docker run -d --name semo_app -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/semo_app:latest
